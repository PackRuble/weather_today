import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:hooks_riverpod/hooks_riverpod.dart';
import 'package:weather_today/application/const/app_utils.dart';
import 'package:weather_today/application/navigation/routes.gr.dart';
import 'package:weather_today/domain/controllers/localization_controller.dart';
import 'package:weather_today/domain/models/toasts_model.dart';
import 'package:weather_today/ui/shared/listen_message_widget.dart';
import 'package:weather_today/utils/log'
    'ger/all_observers.dart';

import 'global_key.dart';

/// –ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ü–µ–Ω—Ç—Ä –≤—ã–∑–æ–≤–∞ —Å–Ω—ç–∫–æ–≤.
class SnackController extends ChangeNotifier {
  SnackController();

  MessageSnack? snack;

  void showSnack(MessageSnack snack) {
    final result =
        snack.copyWith(message: AppUtils.clearSecrets(snack.message));
    this.snack = result;
    notifyListeners();

    logInfo(result);
  }
}

/// –¶–µ–Ω—Ç—Ä –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –≤—Å–ø–ª—ã–≤–∞—é—â–∏–º–∏ —Ç–æ—Å—Ç–∞–º–∏!
class ToastController extends ChangeNotifier {
  MessageToast? toast;

  void showToast(MessageToast toast) {
    final result =
        toast.copyWith(message: AppUtils.clearSecrets(toast.message));
    this.toast = result;
    notifyListeners();

    logInfo(result);
  }
}

/// –†–µ–∞–ª–∏–∑—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (Snackbar or Toast).
class MessageController {
  MessageController(this._ref);

  final Ref _ref;

  static final instance = Provider.autoDispose(
    MessageController.new,
    name: '$MessageController/instance',
  );

  /// –ü–∞—Å—Å–∏–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. –ù–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π.
  static final toasts = ChangeNotifierProvider<ToastController>(
    (ref) => ToastController(),
    name: '$MessageController/toasts->$ToastController',
  );

  /// –ê–∫—Ç–∏–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π, –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è.
  static final snacks = ChangeNotifierProvider<SnackController>(
    (ref) => SnackController(),
    name: '$MessageController/snacks->$SnackController',
  );

  /// –ø–æ–∫–∞–∑–∞—Ç—å Toast.
  void _showToast(MessageToast toast) => _ref.read(toasts).showToast(toast);

  /// –ø–æ–∫–∞–∑–∞—Ç—å Snack.
  void _showSnack(MessageSnack snack) => _ref.read(snacks).showSnack(snack);

  /// –õ—é–±–∞—è –æ—à–∏–±–∫–∞.
  void showErrorSnack(String message) => _showSnack(
        MessageSnack(
          message: message,
          action: MapEntry(
            tr.dialogs.buttons.know,
            () async => showDialog(
              useSafeArea: true,
              context: materialKeyProvider.currentContext!,
              builder: (_) => ErrorInfoDialog(AppUtils.clearSecrets(message)),
            ),
          ),
        ),
      );

  /// –õ—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
  void showSnack(String message) => _showSnack(
        MessageSnack(
          message: message,
        ),
      );

  /// –û—à–∏–±–∫–∞ —Å–µ—Ç–∏.
  void tSocketException() => _showToast(_StoreMessages.toastSocketException);

  /// –í—Ä–µ–º—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ.
  void tTimeoutException() => _showToast(_StoreMessages.toastTimeoutException);

  /// –£—Å–ø–µ—à–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ ApiKey-–ø–æ–≥–æ–¥—ã.
  void tApiKeyWeatherSetTrue() =>
      _showToast(_StoreMessages.toastApiKeyWeatherSetTrue);

  /// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ApiKey-–ø–æ–≥–æ–¥—ã –Ω–µ —É–¥–∞–ª–∞—Å—å.
  void tApiKeyWeatherSetFalse() =>
      _showToast(_StoreMessages.toastApiKeyWeatherSetFalse);

  /// –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–≥–æ–¥—É —Å–µ–π—á–∞—Å –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ.
  void sUpdateWeatherNotAllowed() =>
      _showSnack(_StoreMessages.snackUpdateWeatherFail);

  /// –ê–ø–∏ –∫–ª—é—á –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ OWM –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω.
  void tCheckApikeyOWMSuccess() =>
      _showToast(_StoreMessages.toastApikeyOWMSuccess);

  /// –ê–ø–∏ –∫–ª—é—á –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ OWM –ù–ï–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω.
  void tCheckApikeyOWMFail() => _showToast(_StoreMessages.toastApikeyOWMFail);
}

class _StoreMessages {
  const _StoreMessages._();

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞.
  ///
  /// –í–æ–∑–Ω–∏–∫–∞–µ—Ç –µ—Å–ª–∏:
  /// - –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º –ø–æ–≥–æ–¥—ã;
  /// - –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º.
  static MessageToast get toastSocketException => MessageToast(
        message: tr.dialogs.messages.socketException,
        toastTime: Toast.LENGTH_LONG,
        gravity: ToastGravity.TOP,
      );

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º.
  ///
  /// –í–æ–∑–Ω–∏–∫–∞–µ—Ç –µ—Å–ª–∏:
  /// - –ù–µ—Ç —É–¥–∞–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –ø–æ–≥–æ–¥—ã;
  static MessageToast get toastTimeoutException => MessageToast(
        message: 'üïêüïúüïëüëà',
        toastTime: Toast.LENGTH_LONG,
        gravity: ToastGravity.TOP,
      );

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ apiKey weather.
  ///
  static MessageToast get toastApiKeyWeatherSetTrue => MessageToast(
        message: tr.dialogs.messages.apiKeyWeatherSetTrue,
        toastTime: Toast.LENGTH_SHORT,
        gravity: ToastGravity.BOTTOM,
      );

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –ø—Ä–æ–≤–∞–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ apiKey weather.
  ///
  static MessageToast get toastApiKeyWeatherSetFalse => MessageToast(
        message: tr.dialogs.messages.apiKeyWeatherSetFalse,
        toastTime: Toast.LENGTH_SHORT,
        gravity: ToastGravity.BOTTOM,
      );

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ api –∫–ª—é—á–∞ –ø–æ–≥–æ–¥—ã.
  ///
  static MessageToast get toastApikeyOWMSuccess => MessageToast(
        message: tr.dialogs.messages.apiKeyOWMVerificationSuccess,
        toastTime: Toast.LENGTH_SHORT,
        gravity: ToastGravity.BOTTOM,
      );

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –ø—Ä–æ–≤–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ api –∫–ª—é—á–∞ –ø–æ–≥–æ–¥—ã.
  ///
  static MessageToast get toastApikeyOWMFail => MessageToast(
        message: tr.dialogs.messages.apiKeyOWMVerificationFail,
        toastTime: Toast.LENGTH_SHORT,
        gravity: ToastGravity.BOTTOM,
      );

  /// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ—É–¥–∞—á–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã.
  ///
  static MessageSnack get snackUpdateWeatherFail => MessageSnack(
        message: tr.dialogs.messages.weatherUpdateFail,
        action: MapEntry(
          tr.dialogs.buttons.know,
          () async => AutoRouter.of(materialKeyProvider.currentContext!).push(
            const UserApiRoute(),
          ),
        ),
      );
}
